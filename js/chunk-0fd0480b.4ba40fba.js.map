{"version":3,"sources":["webpack:///./src/components/dataAnalysis/MapView.vue?11d4","webpack:///./src/components/dataAnalysis/MapView.vue","webpack:///src/components/dataAnalysis/MapView.vue","webpack:///./src/components/dataAnalysis/MapView.vue?dee2","webpack:///./src/components/dataAnalysis/MapView.vue?811e"],"names":["render","_vm","this","_c","_self","staticClass","ref","attrs","_v","staticRenderFns","data","mounted","name","value","backgroundColor","title","text","geo","map","aspectScale","zoom","itemStyle","normal","areaColor","type","x","y","r","colorStops","offset","color","globalCoord","series","emphasis","borderWidth","shadowColor","shadowOffsetX","shadowOffsetY","label","show","textStyle","myChart","methods","randomValue","component"],"mappings":"kHAAA,W,kECAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,MAAM,CAACG,IAAI,WAAWC,MAAM,CAAC,GAAK,SAAS,CAACN,EAAIO,GAAG,YAExJC,EAAkB,G,aCYP,GACfC,OACA,UAEAC,UACA,OACA,CAAAC,YAAAC,SACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,WAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,WAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,0BACA,CAAAD,UAAAC,2BAGA,0CACA,qCAEA,OACAC,qCACAC,OACAC,WAEAC,KACAC,YACAC,gBACAC,SACAC,WACAC,QACAC,WACAC,cACAC,KACAC,KACAC,KACAC,YACA,CACAC,SACAC,cAEA,CACAD,SACAC,cAGAC,mBAKAC,QACA,CACAR,WACAJ,SACAF,YACAR,OACAW,WACAC,QACAC,WACAC,cACAC,KACAC,KACAC,KACAC,YACA,CACAC,SACAC,cAEA,CACAD,SACAC,cAGAC,iBAGAE,UACAV,+BACAW,eACAC,+BACAC,gBACAC,kBAGAC,OACAhB,QACAiB,QACAC,WACAV,iCAOAW,gBAEAC,SACAC,cACA,wCC5IgW,I,wBCQ5VC,EAAY,eACd,EACA5C,EACAS,GACA,EACA,KACA,KACA,MAIa,aAAAmC,E","file":"js/chunk-0fd0480b.4ba40fba.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapView.vue?vue&type=style&index=0&id=787f7237&prod&lang=scss&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"map-view\"},[_c('div',{ref:\"myEchart\",attrs:{\"id\":\"main\"}},[_vm._v(\" 2 \")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"map-view\">\r\n    <div\r\n      ref=\"myEchart\"\r\n      id=\"main\"\r\n    >\r\n      2\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n// import geoJson from \"@/assets/datas.json\";\r\nimport china from \"../../../node_modules/echarts/map/json/china.json\";\r\n\r\nexport default {\r\n  data() {\r\n    return {};\r\n  },\r\n  mounted() {\r\n    let geoJson = [\r\n      { name: \"南海诸岛\", value: 0 },\r\n      { name: \"北京\", value: this.randomValue() },\r\n      { name: \"天津\", value: this.randomValue() },\r\n      { name: \"上海\", value: this.randomValue() },\r\n      { name: \"重庆\", value: this.randomValue() },\r\n      { name: \"河北\", value: this.randomValue() },\r\n      { name: \"河南\", value: this.randomValue() },\r\n      { name: \"云南\", value: this.randomValue() },\r\n      { name: \"辽宁\", value: this.randomValue() },\r\n      { name: \"黑龙江\", value: this.randomValue() },\r\n      { name: \"湖南\", value: this.randomValue() },\r\n      { name: \"安徽\", value: this.randomValue() },\r\n      { name: \"山东\", value: this.randomValue() },\r\n      { name: \"新疆\", value: this.randomValue() },\r\n      { name: \"江苏\", value: this.randomValue() },\r\n      { name: \"浙江\", value: this.randomValue() },\r\n      { name: \"江西\", value: this.randomValue() },\r\n      { name: \"湖北\", value: this.randomValue() },\r\n      { name: \"广西\", value: this.randomValue() },\r\n      { name: \"甘肃\", value: this.randomValue() },\r\n      { name: \"山西\", value: this.randomValue() },\r\n      { name: \"内蒙古\", value: this.randomValue() },\r\n      { name: \"陕西\", value: this.randomValue() },\r\n      { name: \"吉林\", value: this.randomValue() },\r\n      { name: \"福建\", value: this.randomValue() },\r\n      { name: \"贵州\", value: this.randomValue() },\r\n      { name: \"广东\", value: this.randomValue() },\r\n      { name: \"青海\", value: this.randomValue() },\r\n      { name: \"西藏\", value: this.randomValue() },\r\n      { name: \"四川\", value: this.randomValue() },\r\n      { name: \"宁夏\", value: this.randomValue() },\r\n      { name: \"海南\", value: this.randomValue() },\r\n      { name: \"台湾\", value: this.randomValue() },\r\n      { name: \"香港\", value: this.randomValue() },\r\n      { name: \"澳门\", value: this.randomValue() },\r\n    ];\r\n    // let myChart = this.$echarts.init(document.getElementById(\"main\"));\r\n    let myChart = this.$echarts.init(this.$refs.myEchart); //这里是为了获得容器所在位置\r\n    this.$echarts.registerMap(\"china\", china);\r\n\r\n    let option = {\r\n      backgroundColor: \"rgb(100, 180, 252)\",\r\n      title: {\r\n        text: \"苏苏\",\r\n      },\r\n      geo: {\r\n        map: \"china\",\r\n        aspectScale: 0.75,\r\n        zoom: 1.1,\r\n        itemStyle: {\r\n          normal: {\r\n            areaColor: {\r\n              type: \"radial\",\r\n              x: 0.5,\r\n              y: 0.5,\r\n              r: 0.8,\r\n              colorStops: [\r\n                {\r\n                  offset: 0,\r\n                  color: \"#ccc\",\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: \"red\",\r\n                },\r\n              ],\r\n              globalCoord: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          type: \"map\",\r\n          zoom: 1.1,\r\n          map: \"china\",\r\n          data: geoJson,\r\n          itemStyle: {\r\n            normal: {\r\n              areaColor: {\r\n                type: \"radial\",\r\n                x: 0.5,\r\n                y: 0.5,\r\n                r: 0.8,\r\n                colorStops: [\r\n                  {\r\n                    offset: 0,\r\n                    color: \"#ccc\",\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: \"red\",\r\n                  },\r\n                ],\r\n                globalCoord: true,\r\n              },\r\n            },\r\n            emphasis: {\r\n              areaColor: \"rgb(107, 127, 240)\",\r\n              borderWidth: 0.1,\r\n              shadowColor: \"rgb(231, 57, 57)\",\r\n              shadowOffsetX: 1,\r\n              shadowOffsetY: 1,\r\n            },\r\n          },\r\n          label: {\r\n            normal: {\r\n              show: true,\r\n              textStyle: {\r\n                color: \"rgb(255, 255, 255)\",\r\n              },\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    };\r\n    myChart.setOption(option);\r\n  },\r\n  methods: {\r\n    randomValue() {\r\n      return Math.round(Math.random() * 1000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n.map-view {\r\n  width: 100%;\r\n  height: 100%;\r\n  #main {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgb(82, 150, 252);\r\n    height: 56.25rem;\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MapView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MapView.vue?vue&type=template&id=787f7237&\"\nimport script from \"./MapView.vue?vue&type=script&lang=js&\"\nexport * from \"./MapView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MapView.vue?vue&type=style&index=0&id=787f7237&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}